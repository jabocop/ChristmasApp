{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"onSu",
				"[pub] ● onSubmit () => any"
			],
			[
				"con",
				"[pub] ○ controller (name: string, controllerConstructor: Function): ng.IModule (+ 2 overload(s))"
			],
			[
				"nation",
				"nation1"
			],
			[
				"sho",
				"shortName"
			],
			[
				"bra",
				"brazil"
			],
			[
				"alg",
				"algeria"
			],
			[
				"kor",
				"korea"
			],
			[
				"gha",
				"ghana"
			],
			[
				"ita",
				"italy"
			],
			[
				"uru",
				"uruguay"
			],
			[
				"chi",
				"chile"
			],
			[
				"aus",
				"australia"
			],
			[
				"rus",
				"russia"
			],
			[
				"bel",
				"belgium"
			],
			[
				"por",
				"portugal"
			],
			[
				"ger",
				"germany"
			],
			[
				"arg",
				"argentina"
			],
			[
				"hon",
				"honduras"
			],
			[
				"e",
				"ecuador"
			],
			[
				"eng",
				"england"
			],
			[
				"gr",
				"greece"
			],
			[
				"col",
				"colombia"
			],
			[
				"ch",
				"chile"
			],
			[
				"home",
				"homeResult"
			],
			[
				"td",
				"tbody	Tag"
			],
			[
				"th",
				"thead	Tag"
			],
			[
				"for",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"quest",
				"question"
			],
			[
				"ques",
				"question1"
			],
			[
				"gro",
				"groupA"
			],
			[
				"c",
				"cameroon"
			],
			[
				"config",
				"configDB"
			],
			[
				"users",
				"usersSchema"
			]
		]
	},
	"buffers":
	[
		{
			"file": "FrontEnd/views/login.html",
			"settings":
			{
				"buffer_size": 476,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n\nclass urlDecoder {\n  public url_base64_decode(str:string) {\n      var output = str.replace('-', '+').replace('_', '/');\n      switch (output.length % 4) {\n          case 0:\n            break;\n          case 2:\n            output += '==';\n            break;\n          case 3:\n            output += '=';\n            break;\n          default:\n            throw 'Illegal base64url string!';\n      }\n      return window.atob(output); //polifyll https://github.com/davidchambers/Base64.js\n    }\n}\n\n\nclass LoginCtrl {\n    \n    constructor($scope: any,$http : any, $window :any) {\n    \n        $scope.user = {username: 'john.doe', password: 'foobar'};  \n        $scope.message = '';  \n        $scope.events = this;\n        $scope.submit = () => {\n        \n        $http.post('/authenticate', $scope.user)\n        .success(function (data, status, headers, config) {\n          $window.sessionStorage.token = data.token;\n          $scope.isAuthenticated = true;\n          var encodedProfile = data.token.split('.')[1];\n          var urlEnoder = new urlDecoder();\n          var profile = JSON.parse(urlEnoder.url_base64_decode(encodedProfile));\n          $scope.welcome = 'Welcome ' + profile.first_name + ' ' + profile.last_name;\n        })\n        .error(function (data, status, headers, config) {\n          // Erase the token if the user fails to log in\n          delete $window.sessionStorage.token;\n\n          // Handle login errors here\n          $scope.message = 'Error: Invalid user or password';\n        }); \n    \n        }\n\n        $scope.callRestricted = () => {\n           $http({url: '/api/restricted', method: 'GET'})\n          .success(function (data, status, headers, config) {\n            $scope.message = $scope.message + ' ' + data.name; // Should log 'foo'\n          })\n          .error(function (data, status, headers, config) {\n            alert(data);\n          }\n      );\n        }\n    }\n\n\n\n\n\n    \n\n    \n}\n",
			"file": "FrontEnd/scripts/controllers/login.ts",
			"file_size": 2003,
			"file_write_time": 130537207414039393,
			"settings":
			{
				"buffer_size": 1920,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/scripts/factories/authInterceptor.ts",
			"settings":
			{
				"buffer_size": 841,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/scripts/app.ts",
			"settings":
			{
				"buffer_size": 1997,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/index.html",
			"settings":
			{
				"buffer_size": 1319,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/scripts/controllers/main.ts",
			"settings":
			{
				"buffer_size": 219,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/scripts/controllers/about.ts",
			"settings":
			{
				"buffer_size": 233,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FrontEnd/bower_components/angularjs/angular.js",
			"settings":
			{
				"buffer_size": 780320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Server/server.js",
			"settings":
			{
				"buffer_size": 1832,
				"line_ending": "Windows"
			}
		},
		{
			"file": "gulpfile.js",
			"settings":
			{
				"buffer_size": 724,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Prog/ChristmasApp/FrontEnd/scripts/typings/angularjs/angular.d.ts",
		"/D/Prog/ChristmasApp/FrontEnd/index.html",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/app.ts",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/app_old.js",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/app.js",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/controllers/about.ts",
		"/D/Prog/ChristmasApp/FrontEnd/bower.json",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/controllers/main.ts",
		"/D/Prog/ChristmasApp/.gitignore",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/controllers/main.js",
		"/D/Prog/ChristmasApp/FrontEnd/views/main.html",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/controllers/main_old.js",
		"/D/Prog/ChristmasApp/FrontEnd/scripts/controllers/about_old.js",
		"/D/Prog/ChristmasApp/FrontEnd/gulpfile.js",
		"/C/Users/Jacob/AppData/Roaming/Sublime Text 3/Packages/T3S/README.md",
		"/D/Prog/ChristmasApp/ChristmasApp.sublime-project",
		"/D/Prog/ChristmasApp/FrontEnd/app/index.html",
		"/D/Prog/ChristmasApp/FrontEnd/app/styles/main.css",
		"/D/Prog/KeatsTest/ng-boilerplate/src/app/home/home.controller.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/src/app/app.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/src/app/about/about.controller.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/src/app/about/module.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/src/templates/about/index.html",
		"/D/Prog/KeatsTest/ng-boilerplate/src/app/core/exceptions.decorator.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/src/templates/home/index.html",
		"/D/Prog/KeatsTest/ng-boilerplate/src/types/app/core.ts",
		"/D/Prog/KeatsTest/ng-boilerplate/gulpfile.js",
		"/D/Prog/KeatsTest/ng-boilerplate/src/index.html",
		"/D/Prog/WorldCup/bin/www",
		"/D/Prog/WorldCup/views/index.ejs",
		"/D/Prog/WorldCup/views/login.ejs",
		"/D/Prog/WorldCup/views/signup.ejs",
		"/D/Prog/WorldCup/routes/routes.js",
		"/D/Prog/WorldCup/routes/adminRoutes.js",
		"/D/Prog/WorldCup/routes/userRoutes.js",
		"/D/Prog/WorldCup/views/allBets.ejs",
		"/D/Prog/WorldCup/models/question.js",
		"/D/Prog/WorldCup/views/admin.ejs",
		"/D/Prog/WorldCup/views/adminMisc.ejs",
		"/D/Prog/WorldCup/views/adminMatch.ejs",
		"/D/Prog/WorldCup/models/userBet.js",
		"/D/Prog/WorldCup/views/testSortList.ejs",
		"/D/Prog/WorldCup/views/groups.ejs",
		"/D/Prog/WorldCup/models/group.js",
		"/D/Prog/WorldCup/views/group.ejs",
		"/D/Prog/WorldCup/seed/seed.js",
		"/D/Prog/WorldCup/models/nation.js",
		"/D/Prog/WorldCup/views/profile.ejs",
		"/D/Prog/WorldCup/models/user.js",
		"/D/Prog/WorldCup/config/passport.js",
		"/D/Prog/WorldCup/startServer.bat",
		"/D/Prog/WorldCup/app.js",
		"/D/Prog/WorldCup/config/database.js",
		"/D/Prog/WorldCup/routes/common.js",
		"/D/Prog/WorldCup/models/match.js",
		"/D/Prog/WorldCup/routes/index.js",
		"/D/Prog/WorldCup/routes/users.js",
		"/D/Prog/WorldCup/package.json",
		"/D/Prog/TSExpressBoilerPlate/typings/mongoose/mongoose.d.ts",
		"/D/Prog/TSExpressBoilerPlate/interfaces/user.d.ts",
		"/D/Prog/TSExpressBoilerplate/models/user.ts",
		"/D/Prog/TSExpressBoilerPlate/routes/routes.ts",
		"/D/Prog/TSExpressBoilerPlate/views/signup.ejs",
		"/D/Prog/TSExpressBoilerplate/views/signup.ejs",
		"/D/Prog/TSExpressBoilerPlate/views/index.ejs",
		"/D/Prog/TSExpressBoilerPlate/views/error.ejs",
		"/D/Prog/TSExpressBoilerPlate/routes/routes.js",
		"/D/Prog/TSExpressBoilerPlate/views/login.ejs",
		"/D/Prog/TSExpressBoilerPlate/package.json",
		"/D/Prog/TSExpressBoilerplate/views/login.hjs",
		"/D/Prog/TSExpressBoilerPlate/app.ts",
		"/D/Prog/TSExpressBoilerPlate/config/database.ts",
		"/D/Prog/TSExpressBoilerPlate/README.md",
		"/D/Prog/TSExpressBoilerplate/views/login.ejs",
		"/D/Prog/TSExpressBoilerplate/.gitignore",
		"/D/Prog/TSExpressBoilerPlate/Gruntfile.js",
		"/D/Prog/TSExpressBoilerPlate/TSExpressBoilerplate.sublime-project",
		"/D/Prog/TSExpressBoilerplate/routes/routes.ts",
		"/D/Prog/TSExpressBoilerPlate/typings/express/express.d.ts",
		"/D/Prog/TSExpressBoilerPlate/typings/node/node.d.ts",
		"/D/Prog/TSExpressBoilerPlate/app.js",
		"/D/Prog/TSExpressBoilerplate/app2.ts",
		"/D/Prog/TSExpressBoilerPlate/interfaces/IError.d.ts",
		"/D/Prog/TSExpressBoilerplate/interfaces/IError.d.ts",
		"/D/Prog/TSExpressBoilerplate/TSExpressBoilerplate.sublime-project",
		"/D/Prog/meanApp/packages/articles/server/routes/articles.js",
		"/D/Prog/meanApp/node_modules/meanio/lib/templates/server/routes.js",
		"/D/Prog/ExpressTS/app.js",
		"/D/Prog/ExpressTS/models/users.js",
		"/D/Prog/ExpressTS/views/layout.jade",
		"/D/Prog/ExpressTS/views/users.jade",
		"/D/Prog/ExpressTS/routes/index.js",
		"/D/Prog/ExpressTS/bin/www",
		"/D/Prog/ExpressTS/package.json",
		"/D/Prog/ExpressTS/test/Test.Test1.js",
		"/D/Prog/ExpressTS/test/Test.Test2.ts",
		"/D/Prog/ExpressTS/test.ts"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"D:\\Prog\\TSExpressBoilerPlate",
			"D:\\Prog\\meanApp\\server",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Window",
			"IWindowService",
			"responseError",
			"when",
			"$routeProvider",
			"short_name",
			"groupB",
			"chil",
			"eq",
			"equ",
			")",
			"sessions",
			"Document",
			"bcrypt",
			"status",
			"Error",
			"apa",
			"requiresAdmin",
			"requiresLogin",
			"3000"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"shortName"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "FrontEnd/views/login.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 476,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "FrontEnd/scripts/controllers/login.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1920,
						"regions":
						{
						},
						"selection":
						[
							[
								763,
								763
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 237.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "FrontEnd/scripts/factories/authInterceptor.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 841,
						"regions":
						{
						},
						"selection":
						[
							[
								489,
								489
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "FrontEnd/scripts/app.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1997,
						"regions":
						{
						},
						"selection":
						[
							[
								55,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "FrontEnd/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1319,
						"regions":
						{
						},
						"selection":
						[
							[
								1174,
								1174
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "FrontEnd/scripts/controllers/main.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 219,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "FrontEnd/scripts/controllers/about.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 233,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "FrontEnd/bower_components/angularjs/angular.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 780320,
						"regions":
						{
						},
						"selection":
						[
							[
								282727,
								282727
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 145091.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Server/server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1832,
						"regions":
						{
						},
						"selection":
						[
							[
								1320,
								1320
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "gulpfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 724,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "ChristmasApp.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 234.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
